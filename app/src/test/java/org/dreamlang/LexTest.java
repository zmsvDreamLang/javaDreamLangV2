/*
 * This source file was generated by the Gradle 'init' task
 */
package org.dreamlang;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.List;

import org.dreamlang.lexer.Lexical;
import org.dreamlang.lexer.Token;
import org.junit.jupiter.api.Test;

class LexTest {
  @Test
  void testLexing1() {
    final Lexical lexer =
        new Lexical(
            """
            package main
            import strings
    
            fun main(){
                var i = 1
                val a[] = [1,2,3]
                ref reference = a[i]
                ref i = reference
                return reference
            }
        """);

    List<Token> tokens = lexer.execute();
    assertNotNull(tokens, "Token list should not be null");
    assertTrue(tokens.size() > 0, "Token list should not be empty");

    // 验证tokens列表包含期望的关键字和标识符
    boolean foundKeywords = false;
    boolean foundIdentifiers = false;

    for (Token token : tokens) {
      String tokenString = token.toString();
      if (tokenString.contains("KEYWORD")) {
        foundKeywords = true;
      }
      if (tokenString.contains("IDENT")) {
        foundIdentifiers = true;
      }
      System.out.println(tokenString);
    }

    assertTrue(foundKeywords, "Should find keyword tokens");
    assertTrue(foundIdentifiers, "Should find identifier tokens");
  }
}
